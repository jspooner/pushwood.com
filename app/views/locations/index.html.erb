<% content_for :head do %>
	<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
<% end %>

<%= form_tag(api_v1_locations_path(:format => :json), {:id=>"search_form", :remote => true}) do |f| -%>
	<%= text_field_tag "search", "", {:type => "search", :placeholder => "Search"} %>
<% end -%>


<div id="locationapp"></div>
<div id="location-form"></div>
<ul id="location-list"></ul>

<div id="map_canvas"></div>
<div id="location_list"></div>

<%= link_to 'New Location', new_location_path %>

<% content_for :script do %>
	<script type="text/javascript">
	

		
		$(document).ready(function() {
return;			
			function listItem(markerImg, name, address, phone, url) {
				var div = $("<div></div>");
				var a = $("<a>"+name+"</a>");
				a.attr("href", url);
				div.append($("<h2 style='display:inline'></h2>").append($('<img src="'+markerImg+'" />')).append(a) );
				<% if current_user %>
				div.append( $('<a style="color:red;" href="'+url+'/edit">edit</a>'));
				<% end %>
				div.append($("<p>"+address+"</p>"));
				div.append($("<p>"+phone+"</p>"));
				return div;
			}
			
			function iconFor(i) {
				var alpha = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S"];
				
				return '/images/markers/blue_Marker'+alpha[i]+'.png';
			}
						
			var carmelvalley = new google.maps.LatLng(32.94803512647807, -117.23739940536501); 
			var map;
			var marker;
			var markersArray = [];
		  var myOptions = {
		    zoom: 12,
		    mapTypeId: google.maps.MapTypeId.ROADMAP
		  };
		  map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
			map.setCenter(carmelvalley);
			
						
			
			google.maps.event.addListener(map, 'idle', function() {
				
				var bounds = map.getBounds();
				$.getJSON('/api/v1/locations.json?bounding_box='+bounds.toUrlValue(), function(data) {
					// remove
				  $("#location_list").empty();
				  if (markersArray) {
				    for (i in markersArray) {
				      markersArray[i].setMap(null);
				    }
				    markersArray.length = 0;
				  }
					
					// add
					for (var i=0; i < data.length; i++) {
						var marker = new google.maps.Marker({ map: map,	draggable: true, title:data[i]['location']['name'], position: new google.maps.LatLng(data[i]['location']['lat'], data[i]['location']['lng']) });
						marker.setIcon( iconFor(i) );
						
						function foo(map,marker,location) {
							var contentString = '<div id="content">'+
							    '<div id="siteNotice">'+
							    '</div>'+
							    '<h1 id="firstHeading" class="firstHeading">'+location['name']+'</h1>'+
							    '<div id="bodyContent">'+
							    '<p>' + location['street'] +
							    '</p>'+
							    '</div>'+
							    '</div>';
							var infowindow = new google.maps.InfoWindow({content:contentString, disableAutoPan:true});
							google.maps.event.addListener(marker, 'click', function() {
							  infowindow.open(map,marker);
							});
						}
						foo(map,marker,data[i]['location']);
						
						markersArray.push(marker);
						$("#location_list").append( 
							listItem(
								iconFor(i),
								data[i]['location']['name'], 
								data[i]['location']['street'], 
								data[i]['location']['phone'],
								"locations/" + data[i]['location']['id']
							 ) );
					};
									
				});
				
		  });
			
			// Try W3C Geolocation (Preferred)
		  if(navigator.geolocation) {
		    browserSupportFlag = true;
		    navigator.geolocation.getCurrentPosition(function(position) {
		      initialLocation = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
		      map.setCenter(initialLocation);
		    }, function() {
		      handleNoGeolocation(browserSupportFlag);
		    });
		  // Try Google Gears Geolocation
		  } else if (google.gears) {
		    browserSupportFlag = true;
		    var geo = google.gears.factory.create('beta.geolocation');
		    geo.getCurrentPosition(function(position) {
		      initialLocation = new google.maps.LatLng(position.latitude,position.longitude);
		      map.setCenter(initialLocation);
		    }, function() {
		      handleNoGeoLocation(browserSupportFlag);
		    });
		  // Browser doesn't support Geolocation
		  } else {
		    browserSupportFlag = false;
		    handleNoGeolocation(browserSupportFlag);
		  };
			
			function handleNoGeolocation(errorFlag) {
		    if (errorFlag == true) {
		      alert("Geolocation service failed.");
		      initialLocation = carmelvalley;
		    } else {
		      alert("Your browser doesn't support geolocation. We've placed you in Siberia.");
		      initialLocation = carmelvalley;
		    }
		    map.setCenter(initialLocation);
		  }
			
			
			
			
			
			
			
			
			
			
			// end doc ready
		});
	</script>
<% end %>